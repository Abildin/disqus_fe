// Generated by CoffeeScript 1.9.1
'use strict';
var CommentRactive, r;

CommentRactive = Ractive.extend({
  template: '#comments-t',
  data: {
    user: {
      title: null,
      email: null
    },
    comment: {
      replyTo: null,
      comment: null
    },
    comments: [],
    format: function(time) {
      var formatDate, formatTime, now, timestamp;
      formatTime = function(date) {
        var result;
        result = "";
        if (date.getHours().toString().length < 2) {
          result += "0";
        }
        result += date.getHours() + ":";
        if (date.getMinutes().toString().length < 2) {
          result += "0";
        }
        result += date.getMinutes() + ":";
        if (date.getSeconds().toString().length < 2) {
          result += "0";
        }
        result += date.getSeconds();
        return result;
      };
      formatDate = function(date) {
        var result;
        result = (date.getFullYear()) + "-";
        if ((date.getMonth() + 1).toString().length < 2) {
          result += "0";
        }
        result += (date.getMonth() + 1) + "-";
        if (date.getDate().toString().length < 2) {
          result += "0";
        }
        result += date.getDate();
        return result;
      };
      timestamp = new Date(time);
      now = new Date();
      if (formatDate(timestamp) === formatDate(now)) {
        return formatTime(timestamp);
      } else {
        return formatDate(timestamp);
      }
    }
  },
  getComments: function() {
    var self;
    self = this;
    return chrome.extension.sendRequest({
      command: "getComments"
    }, function(response) {
      if (response.status === 'success') {
        return self.set('comments', response.response.objects);
      }
    });
  },
  replyTo: function(comment) {
    this.set('comment.replyTo', comment.resource_uri);
    return this.set('comment.comment', comment.title + ", ");
  },
  newComment: function() {
    var comment, self, user;
    self = this;
    user = this.get('user');
    comment = this.get('comment');
    return chrome.extension.sendRequest({
      command: "newComment",
      user: user,
      comment: {
        comment: comment.comment,
        replyTo: comment.replyTo
      }
    }, function(response) {
      console.log(response);
      if (response.status === 'success') {
        return self.getComments();
      }
    });
  },
  init: function(options) {
    return this.getComments();
  }
});

r = new CommentRactive({
  el: '#comments-r'
});
